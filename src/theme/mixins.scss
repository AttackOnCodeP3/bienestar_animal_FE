/// Truncates a single line of text with ellipsis and sets a maximum width.
///
/// @access public
/// @param {Length | Percentage} $width - The maximum width of the text container. Defaults to 100%.
/// @example scss
///   .title {
///     @include truncate-text(80%);
///   }
@mixin truncate-text($width: 100%) {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  width: $width;
}

/// Limits the number of visible lines in a block of text using `-webkit-line-clamp`.
///
/// @access public
/// @param {Number} $lines - Number of lines to display.
/// @example scss
///   .description {
///     @include limit-lines(3);
///   }
@mixin limit-lines($lines) {
  display: -webkit-box;
  -webkit-line-clamp: $lines;
  -webkit-box-orient: vertical;
  overflow: hidden;
  text-overflow: ellipsis;
}

/// Centers content both vertically and horizontally using flexbox.
///
/// @access public
/// @example scss
///   .centered {
///     @include flex-center;
///   }
@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

/// Applies fill colors to each logo part using CSS variables.
///
/// Uses the following variables:
/// - `--logo-color-paw`
/// - `--logo-color-wellbeing`
/// - `--logo-color-animal`
/// - `--logo-color-community`
///
/// These variables must be set globally based on theme mode (light/dark).
///
/// @example scss
///   @include apply-logo-colors();
@mixin apply-logo-colors() {
  .logo-color-paw {
    fill: var(--logo-color-paw);
  }

  .logo-color-word-wellbeing {
    fill: var(--logo-color-wellbeing);
  }

  .logo-color-word-animal {
    fill: var(--logo-color-animal);
  }

  .logo-color-community-care {
    fill: var(--logo-color-community);
  }
}

@mixin light-mode($selector: 'body') {
  #{$selector}.light-mode {
    @content;
  }
}

@mixin dark-mode($selector: 'body') {
  #{$selector}.dark-mode {
    @content;
  }
}
